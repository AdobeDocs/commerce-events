{"version":3,"file":"component---src-pages-events-module-development-md-a6337e3916a4506d9b4f.js","mappings":"6SAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,+BADR,gCAGA,4JAA6I,cAAGC,WAAW,IACvJ,KAAQ,gDACP,uBAAYA,WAAW,KAAvB,oBAFwI,YAA7I,MAGA,eACE,GAAM,mBADR,oBAGA,4FACA,oBACE,eAAIA,WAAW,MAAf,cAAkC,uBAAYA,WAAW,MAAvB,iBAAlC,yBACA,eAAIA,WAAW,MAAf,+BAAmD,uBAAYA,WAAW,MAAvB,cAAnD,WAEF,eACE,GAAM,gBADR,kBAGA,iCAAkB,uBAAYA,WAAW,KAAvB,mCAAlB,4HAAyN,cAAGA,WAAW,IACnO,KAAQ,oDACP,uBAAYA,WAAW,KAAvB,sBAFoN,YAAzN,MAGA,uEACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,66BAiBL,8BAAe,cAAGA,WAAW,IACzB,KAAQ,iFADG,kCAAf,uCAGA,eACE,GAAM,aADR,eAGA,6CAA8B,uBAAYA,WAAW,KAAvB,aAA9B,6BAAgH,cAAGA,WAAW,IAC1H,KAAQ,gHACP,uBAAYA,WAAW,KAAvB,4BAFL,oFAGA,mCACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,gBADZ,0mBAeL,8BAAe,cAAGA,WAAW,IACzB,KAAQ,iFADG,kCAAf,sCAKH,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/events/module-development.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/commerce-extensibility/commerce-extensibility/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"commerce-module-development\"\n    }}>{`Commerce module development`}</h1>\n    <p>{`This topic describes how to enable your custom modules for Adobe I/O Events. You can also manually register observer events using the `}<a parentName=\"p\" {...{\n        \"href\": \"./commands.md#subscribe-to-a-commerce-event\"\n      }}><inlineCode parentName=\"a\">{`events:subscribe`}</inlineCode>{` command`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"register-events\"\n    }}>{`Register events`}</h2>\n    <p>{`You can programmatically register events using the following methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Create an `}<inlineCode parentName=\"li\">{`io_events.xml`}</inlineCode>{` file in your module`}</li>\n      <li parentName=\"ul\">{`Declare them in the system `}<inlineCode parentName=\"li\">{`config.php`}</inlineCode>{` file`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"io_eventsxml\"\n    }}>{`io_events.xml`}</h3>\n    <p>{`Create the `}<inlineCode parentName=\"p\">{`<module-root>/etc/io_events.xml`}</inlineCode>{` file and define a list of events that should always be emitted. Events listed in this file cannot be disabled with the `}<a parentName=\"p\" {...{\n        \"href\": \"./commands.md#unsubscribe-from-a-commerce-event\"\n      }}><inlineCode parentName=\"a\">{`events:unsubscribe`}</inlineCode>{` command`}</a>{`.`}</p>\n    <p>{`The following example registers multiple events.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\"?>\n<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:module-commerce-events-client/etc/io_events.xsd\">\n   <event name=\"observer.customer_login\" />\n   <event name=\"observer.customer_logout\" />\n   <event name=\"plugin.magento.catalog.api.category_repository.save\" />\n   <event name=\"plugin.magento.catalog.api.category_repository.save\" />\n   <event name=\"plugin.magento.catalog.api.category_repository.delete\" />\n   <event name=\"plugin.magento.catalog.api.product_repository.save\" />\n   <event name=\"plugin.magento.catalog.api.product_repository.delete\" />\n   <event name=\"plugin.magento.customer.api.customer_repository.save\" />\n   <event name=\"plugin.magento.customer.api.customer_repository.delete\" />\n   <event name=\"plugin.magento.sales.api.order_repository.save\" />\n   <event name=\"plugin.magento.sales.api.order_management.place\" />\n</config>\n`}</code></pre>\n    <p>{`Run the `}<a parentName=\"p\" {...{\n        \"href\": \"./commands.md#generate-a-commerce-module-based-on-a-list-of-subscribed-events\"\n      }}>{`events:generate:module command`}</a>{` to generate the required plugins.`}</p>\n    <h3 {...{\n      \"id\": \"configphp\"\n    }}>{`config.php`}</h3>\n    <p>{`You can also create an `}<inlineCode parentName=\"p\">{`io_events`}</inlineCode>{` section in the Commerce `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/files/deployment-files.html\"\n      }}><inlineCode parentName=\"a\">{`app/etc/config.php file`}</inlineCode></a>{`. Events registered using this mechanism can be disabled from the command line.`}</p>\n    <p>{`For example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`'io_events' => [\n    'observer.customer_login' => 1,\n    'observer.customer_logout' => 1,\n    'plugin.magento.catalog.api.category_repository.save' => 1,\n    'plugin.magento.catalog.api.category_repository.delete' => 1,\n    'plugin.magento.catalog.api.product_repository.save' => 1,\n    'plugin.magento.catalog.api.product_repository.delete' => 1,\n    'plugin.magento.customer.api.customer_repository.save' => 1,\n    'plugin.magento.customer.api.customer_repository.delete' => 1,\n    'plugin.magento.sales.api.order_management.save' => 1,\n    'plugin.magento.sales.api.order_management.place' => 1\n]\n`}</code></pre>\n    <p>{`Run the `}<a parentName=\"p\" {...{\n        \"href\": \"./commands.md#generate-a-commerce-module-based-on-a-list-of-subscribed-events\"\n      }}>{`events:generate:module command`}</a>{` to generate the required plugins.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}